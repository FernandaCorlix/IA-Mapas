{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/FernandaCorlix/IA-Mapas/blob/main/Terminado%20IA%20para%20entregar\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Instalamos todas las librerias necesarias."
      ],
      "metadata": {
        "id": "Dgj-Db3Oxty8"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "97Vih_3txWxz",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9d81fdff-c5bc-4c3c-ea8e-22c3ab6cb463"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: googlemaps in /usr/local/lib/python3.7/dist-packages (4.7.0)\n",
            "Requirement already satisfied: requests<3.0,>=2.20.0 in /usr/local/lib/python3.7/dist-packages (from googlemaps) (2.23.0)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests<3.0,>=2.20.0->googlemaps) (3.0.4)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests<3.0,>=2.20.0->googlemaps) (2.10)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests<3.0,>=2.20.0->googlemaps) (2022.9.24)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests<3.0,>=2.20.0->googlemaps) (1.24.3)\n",
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: ortools in /usr/local/lib/python3.7/dist-packages (9.4.1874)\n",
            "Requirement already satisfied: protobuf>=3.19.4 in /usr/local/lib/python3.7/dist-packages (from ortools) (3.19.6)\n",
            "Requirement already satisfied: numpy>=1.13.3 in /usr/local/lib/python3.7/dist-packages (from ortools) (1.21.6)\n",
            "Requirement already satisfied: absl-py>=0.13 in /usr/local/lib/python3.7/dist-packages (from ortools) (1.3.0)\n",
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: gmaps in /usr/local/lib/python3.7/dist-packages (0.9.0)\n",
            "Requirement already satisfied: traitlets>=4.3.0 in /usr/local/lib/python3.7/dist-packages (from gmaps) (5.1.1)\n",
            "Requirement already satisfied: ipywidgets>=7.0.0 in /usr/local/lib/python3.7/dist-packages (from gmaps) (7.7.1)\n",
            "Requirement already satisfied: geojson>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from gmaps) (2.5.0)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from gmaps) (1.15.0)\n",
            "Requirement already satisfied: ipython>=5.3.0 in /usr/local/lib/python3.7/dist-packages (from gmaps) (7.9.0)\n",
            "Requirement already satisfied: prompt-toolkit<2.1.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from ipython>=5.3.0->gmaps) (2.0.10)\n",
            "Requirement already satisfied: backcall in /usr/local/lib/python3.7/dist-packages (from ipython>=5.3.0->gmaps) (0.2.0)\n",
            "Requirement already satisfied: pygments in /usr/local/lib/python3.7/dist-packages (from ipython>=5.3.0->gmaps) (2.6.1)\n",
            "Requirement already satisfied: jedi>=0.10 in /usr/local/lib/python3.7/dist-packages (from ipython>=5.3.0->gmaps) (0.18.1)\n",
            "Requirement already satisfied: decorator in /usr/local/lib/python3.7/dist-packages (from ipython>=5.3.0->gmaps) (4.4.2)\n",
            "Requirement already satisfied: pickleshare in /usr/local/lib/python3.7/dist-packages (from ipython>=5.3.0->gmaps) (0.7.5)\n",
            "Requirement already satisfied: setuptools>=18.5 in /usr/local/lib/python3.7/dist-packages (from ipython>=5.3.0->gmaps) (57.4.0)\n",
            "Requirement already satisfied: pexpect in /usr/local/lib/python3.7/dist-packages (from ipython>=5.3.0->gmaps) (4.8.0)\n",
            "Requirement already satisfied: widgetsnbextension~=3.6.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets>=7.0.0->gmaps) (3.6.1)\n",
            "Requirement already satisfied: jupyterlab-widgets>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets>=7.0.0->gmaps) (3.0.3)\n",
            "Requirement already satisfied: ipython-genutils~=0.2.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets>=7.0.0->gmaps) (0.2.0)\n",
            "Requirement already satisfied: ipykernel>=4.5.1 in /usr/local/lib/python3.7/dist-packages (from ipywidgets>=7.0.0->gmaps) (5.3.4)\n",
            "Requirement already satisfied: jupyter-client in /usr/local/lib/python3.7/dist-packages (from ipykernel>=4.5.1->ipywidgets>=7.0.0->gmaps) (6.1.12)\n",
            "Requirement already satisfied: tornado>=4.2 in /usr/local/lib/python3.7/dist-packages (from ipykernel>=4.5.1->ipywidgets>=7.0.0->gmaps) (6.0.4)\n",
            "Requirement already satisfied: parso<0.9.0,>=0.8.0 in /usr/local/lib/python3.7/dist-packages (from jedi>=0.10->ipython>=5.3.0->gmaps) (0.8.3)\n",
            "Requirement already satisfied: wcwidth in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit<2.1.0,>=2.0.0->ipython>=5.3.0->gmaps) (0.2.5)\n",
            "Requirement already satisfied: notebook>=4.4.1 in /usr/local/lib/python3.7/dist-packages (from widgetsnbextension~=3.6.0->ipywidgets>=7.0.0->gmaps) (5.7.16)\n",
            "Requirement already satisfied: jupyter-core>=4.4.0 in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.0.0->gmaps) (4.11.2)\n",
            "Requirement already satisfied: prometheus-client in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.0.0->gmaps) (0.15.0)\n",
            "Requirement already satisfied: pyzmq>=17 in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.0.0->gmaps) (23.2.1)\n",
            "Requirement already satisfied: terminado>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.0.0->gmaps) (0.13.3)\n",
            "Requirement already satisfied: nbformat in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.0.0->gmaps) (5.7.0)\n",
            "Requirement already satisfied: Send2Trash in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.0.0->gmaps) (1.8.0)\n",
            "Requirement already satisfied: jinja2<=3.0.0 in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.0.0->gmaps) (2.11.3)\n",
            "Requirement already satisfied: nbconvert<6.0 in /usr/local/lib/python3.7/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.0.0->gmaps) (5.6.1)\n",
            "Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.7/dist-packages (from jinja2<=3.0.0->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.0.0->gmaps) (2.0.1)\n",
            "Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from jupyter-client->ipykernel>=4.5.1->ipywidgets>=7.0.0->gmaps) (2.8.2)\n",
            "Requirement already satisfied: mistune<2,>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert<6.0->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.0.0->gmaps) (0.8.4)\n",
            "Requirement already satisfied: entrypoints>=0.2.2 in /usr/local/lib/python3.7/dist-packages (from nbconvert<6.0->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.0.0->gmaps) (0.4)\n",
            "Requirement already satisfied: testpath in /usr/local/lib/python3.7/dist-packages (from nbconvert<6.0->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.0.0->gmaps) (0.6.0)\n",
            "Requirement already satisfied: defusedxml in /usr/local/lib/python3.7/dist-packages (from nbconvert<6.0->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.0.0->gmaps) (0.7.1)\n",
            "Requirement already satisfied: bleach in /usr/local/lib/python3.7/dist-packages (from nbconvert<6.0->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.0.0->gmaps) (5.0.1)\n",
            "Requirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert<6.0->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.0.0->gmaps) (1.5.0)\n",
            "Requirement already satisfied: importlib-metadata>=3.6 in /usr/local/lib/python3.7/dist-packages (from nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.0.0->gmaps) (4.13.0)\n",
            "Requirement already satisfied: jsonschema>=2.6 in /usr/local/lib/python3.7/dist-packages (from nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.0.0->gmaps) (4.3.3)\n",
            "Requirement already satisfied: fastjsonschema in /usr/local/lib/python3.7/dist-packages (from nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.0.0->gmaps) (2.16.2)\n",
            "Requirement already satisfied: typing-extensions>=3.6.4 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=3.6->nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.0.0->gmaps) (4.1.1)\n",
            "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=3.6->nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.0.0->gmaps) (3.10.0)\n",
            "Requirement already satisfied: pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0 in /usr/local/lib/python3.7/dist-packages (from jsonschema>=2.6->nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.0.0->gmaps) (0.19.2)\n",
            "Requirement already satisfied: importlib-resources>=1.4.0 in /usr/local/lib/python3.7/dist-packages (from jsonschema>=2.6->nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.0.0->gmaps) (5.10.0)\n",
            "Requirement already satisfied: attrs>=17.4.0 in /usr/local/lib/python3.7/dist-packages (from jsonschema>=2.6->nbformat->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.0.0->gmaps) (22.1.0)\n",
            "Requirement already satisfied: ptyprocess in /usr/local/lib/python3.7/dist-packages (from terminado>=0.8.1->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.0.0->gmaps) (0.7.0)\n",
            "Requirement already satisfied: webencodings in /usr/local/lib/python3.7/dist-packages (from bleach->nbconvert<6.0->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.0.0->gmaps) (0.5.1)\n",
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: osmium in /usr/local/lib/python3.7/dist-packages (3.5.0)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from osmium) (2.23.0)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->osmium) (3.0.4)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->osmium) (1.24.3)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->osmium) (2022.9.24)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->osmium) (2.10)\n",
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: simplejson in /usr/local/lib/python3.7/dist-packages (3.18.0)\n",
            "Enabling notebook extension jupyter-js-widgets/extension...\n",
            "Paths used for configuration of notebook: \n",
            "    \t/usr/etc/jupyter/nbconfig/notebook.json\n",
            "Paths used for configuration of notebook: \n",
            "    \t\n",
            "      - Validating: \u001b[32mOK\u001b[0m\n",
            "Paths used for configuration of notebook: \n",
            "    \t/usr/etc/jupyter/nbconfig/notebook.json\n"
          ]
        }
      ],
      "source": [
        "!pip install googlemaps\n",
        "!pip install ortools\n",
        "!pip install gmaps\n",
        "!pip install osmium\n",
        "!pip install simplejson\n",
        "!jupyter nbextension enable --py --sys-prefix widgetsnbextension"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Importamos todos los modulos que se ocupan y configuramos la API de **Gmaps** para poder conectarnos y extraer la informacion"
      ],
      "metadata": {
        "id": "A3H1jgG_yBb5"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "qFxoFvqfzybV",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "329a01a2-106d-4533-e428-1fbbd8ba4c2c"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            " API queries_quota: 60 \n",
            "\n"
          ]
        }
      ],
      "source": [
        "import ipywidgets as widgets\n",
        "import geopy\n",
        "import gmaps\n",
        "import time\n",
        "import googlemaps\n",
        "import copy\n",
        "import random \n",
        "import math\n",
        "from IPython.display import HTML, display\n",
        "from google.colab import output\n",
        "\n",
        "\n",
        "\n",
        "output.enable_custom_widget_manager()\n",
        "api_key = 'AIzaSyBIp3sn5fU11k3gnjEk4mQKoxC-e_w4GLY'\n",
        "#Se asigna la key a la configuración de gmaps\n",
        "gmaps.configure(api_key=api_key)\n",
        "gmapsAux = googlemaps.Client(key=api_key)"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "<H1>Metodos Auxiliares</H1>\n",
        "\n",
        "**progress** -> Permite la creacion de una barra de progreso para el metodo A_star\n",
        "\n",
        "**getDistanciaGX** -> Obtenemos la distancia que hay en kilometros desde una capital origen hacia alguno de sus vecinos. Esto mediante la lectura de un archivo llamado *CapitalesVecinos.csv*\n",
        "\n",
        "**getDistanciaHX** -> Obtenemos la distancia que hay entre cualquier estado origen a cualquier otro estado destino, mediante el archivo llamado *Capitales - CapitalesCoord.csv*\n",
        "\n",
        "**aggDetalle** -> Este metodo almacenará toda la informacion acerca del algoritmo A_star para que se pueda imprimir despues.\n",
        "\n",
        "**mostrarDetalle** -> Imprime todo la informacion adicional sobre la busqueda.\n",
        "\n",
        "**distancia** -> Mediante el teorema de Pitagoras, calculamos la distancia que hay entre 2 puntos.\n",
        "\n",
        "**permutList** -> Genera todas las permutaciones posibles de una lista.\n",
        "\n",
        "**getCopia** -> Creamos una copia de la lista de capitales\n",
        "\n"
      ],
      "metadata": {
        "id": "6Iib4uxPyU7D"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "AEGfdUQmEPwb"
      },
      "outputs": [],
      "source": [
        "\n",
        "def progress(value, max=100):\n",
        "    return HTML(\"\"\"\n",
        "        <progress\n",
        "            value='{value}'\n",
        "            max='{max}',\n",
        "            style='width: 100%'\n",
        "        >\n",
        "            {value}\n",
        "        </progress>\n",
        "    \"\"\".format(value=value, max=max))\n",
        "\n",
        "def getDistanciaGX(ori, fin):\n",
        "    with open('CapitalesVecinos.csv') as gxFile:\n",
        "      reader = csv.reader(gxFile)\n",
        "      count = 0 \n",
        "      for row in reader:\n",
        "        if row[0] == ori and row[1] == fin:\n",
        "          return float(row[2]) \n",
        "        if count > 1025:\n",
        "          break\n",
        "        count += 1\n",
        "    return 0\n",
        "\n",
        "def getDistanciaHX(ori,fin):\n",
        "  b = 0.0\n",
        "  with open('Capitales - CapitalesCoord.csv') as hxFile:\n",
        "    reader = csv.reader(hxFile)\n",
        "    count = 0 \n",
        "    for row in reader:\n",
        "      if ori.nombre == row[0] and fin.nombre == row[1]:\n",
        "        b = row[2]\n",
        "        return float(b)\n",
        "      if count > 1025:\n",
        "        break\n",
        "      count += 1\n",
        "  return float(b)\n",
        "\n",
        "global detalle\n",
        "detalle = \"\"\n",
        "def aggDetalle(info):\n",
        "    global detalle\n",
        "    detalle += str(info) +\"\\n\"\n",
        "def mostrarDetalle():\n",
        "  global detalle\n",
        "  print(detalle)\n",
        "  detalle=\"\"\n",
        "\n",
        "\n",
        "def distancia(X1,Y1,X2,Y2):\n",
        "  return abs(math.sqrt(((X2 - X1)**2) + ((Y2 - Y1)**2)))\n",
        "\n",
        "def permutList(l):\n",
        "  if not l:\n",
        "    return [[]]\n",
        "  res = []\n",
        "  for e in l:\n",
        "    temp = l[:]\n",
        "    temp.remove(e)\n",
        "    res.extend([[e]+r for r in permutList(temp)])\n",
        "  return res\n",
        "\n",
        "def getCopia():\n",
        "  copia =[]\n",
        "  y = 0\n",
        "  for x in ListaCapitales:\n",
        "    copia.append(Capital2(x.nombre, x.coordenadaX,x.coordenadaY))\n",
        "    copia[y].listaVecinos= copy.deepcopy(x.listaVecinos)\n",
        "    y = y+1\n",
        "  return copia"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "<h1>Clase Capital 1 y 2</h1>\n",
        "Permite la creacion de objetos tipo Capital donde podemos almacenar informacion acerca de ellas, su nombre, coordenadas, vecinos, distancias entre ellas, fx,hx. Despues se van agregando a una lista llamada <strong>ListaCapitales</strong>."
      ],
      "metadata": {
        "id": "T0R50aTv1Gbi"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "j3QC6PQAEgXB"
      },
      "outputs": [],
      "source": [
        "import csv\n",
        "ListaCapitales = []\n",
        "\n",
        "class Capital:\n",
        "  def __init__(self, nombre, coordenadaX, coordenadaY):\n",
        "    self.nombre = nombre\n",
        "    self.coordenadaX = coordenadaX\n",
        "    self.coordenadaY = coordenadaY\n",
        "    self.listaVecinos = []\n",
        "    self.distanciaActual = 0\n",
        "    self.fx = 0\n",
        "    self.hx = 0\n",
        "    ListaCapitales.append(self)\n",
        "\n",
        "  def getCoordenadas(self):\n",
        "    return (self.coordenadaX,self.coordenadaY)\n",
        "\n",
        "  def setVecinos(self,vecinos):\n",
        "    import math\n",
        "    listaDistancias = []\n",
        "    cont = 0\n",
        "    for x in vecinos:\n",
        "        distancia = float(getDistanciaGX(self.nombre, x.nombre))\n",
        "        listaDistancias.append([x,distancia])\n",
        "    self.listaVecinos = listaDistancias\n",
        "\n",
        "class Capital2:\n",
        "  def __init__(self, nombre, coordenadaX, coordenadaY):\n",
        "    self.nombre = nombre\n",
        "    self.coordenadaX = coordenadaX\n",
        "    self.coordenadaY = coordenadaY\n",
        "    self.listaVecinos = []\n",
        "    self.distanciaActual = 0\n",
        "    self.fx = 0\n",
        "    self.hx = 0\n",
        "\n",
        "  def getCoordenadas(self):\n",
        "    return (self.coordenadaX,self.coordenadaY)\n",
        "\n",
        "\n",
        "CiudaddeMexico =Capital(\"CiudaddeMexico\",    19.54925279,    -99.12150253)\n",
        "Puebla=Capital(\"PuebladeZaragoza\",    19.04473715,    -98.22033633)\n",
        "Jalisco    =Capital(\"Guadalajara\",    20.6577107,    -103.3587646)\n",
        "NuevoLeon=Capital(\"Monterrey\",    25.71438732,    -100.3108325)\n",
        "Chihuahua=Capital(\"Chihuahua\",    28.80362809,    -106.0747295)\n",
        "Yucatan    =Capital(\"Merida\",    20.96929423,    -89.5873695)\n",
        "Coahuila=Capital(\"Saltillo\",    25.43773816,    -100.9818715)\n",
        "Aguascalientes=Capital(\"Aguascalientes\",    21.84310239,    -102.2392538)\n",
        "Sonora=Capital(\"Hermosillo\",    29.14893727,    -110.9503612)\n",
        "BajaCalifornia=Capital(\"Mexicali\",    32.62587676,    -115.4509826)\n",
        "SanLuisPotosi=Capital(\"SanLuisPotosi\",    22.15809077,    -100.9885293)\n",
        "Sinaloa    =Capital(\"CuliacanRosales\",    24.80807668,    -107.3939017)\n",
        "Queretaro=Capital(\"SantiagodeQueretaro\", 20.5888661,    -100.3899449)\n",
        "Michoacan = Capital(\"Morelia\",  19.70817185,    -101.1898883)\n",
        "Durango=     Capital(\"VictoriadeDurango\",    24.05590136,    -104.5931936)\n",
        "Chiapas=     Capital(\"TuxtlaGutierrez\",    16.75285996,    -93.10317418)\n",
        "Veracruz    = Capital(\"XalapaEnriquez\",    19.59809292,    -96.89429475)\n",
        "Nayarit=     Capital(\"Tepic\",    21.50407153,    -104.8944208)\n",
        "Morelos=     Capital(\"Cuernavaca\",    18.92440872,    -99.22184359)\n",
        "Tabasco=     Capital(\"Villahermosa\",    17.99218562,    -92.95175342)\n",
        "Tamaulipas=     Capital(\"CiudadVictoria\",    23.7362608,    -99.13647692)\n",
        "Hidalgo=     Capital(\"PachucadeSoto\",    20.10155948,    -98.75879654)\n",
        "Oaxaca=     Capital(\"OaxacadeJuarez\",    17.07360961,    -96.7258096)\n",
        "BajaCaliforniaSur=     Capital(\"LaPaz\",    24.14190566,    -110.3147777)\n",
        "Campeche=     Capital(\"SanFranciscodeCampeche\",    19.83249047,    -90.53246284)\n",
        "Guerrero=     Capital(\"ChilpancingodelosBravo\",    17.60385551,    -99.42017463)\n",
        "EstadodeMexico=     Capital(\"TolucadeLerdo\",    19.2843512,    -99.65283486)\n",
        "QuintanaRoo=     Capital(\"Chetumal\",    18.49988541,    -88.29480332)\n",
        "Colima=     Capital(\"Colima\",    19.2451952,    -103.7243349)\n",
        "Zacatecas=     Capital(\"Zacatecas\",    22.77059947,    -102.5838043)\n",
        "Guanajuato=  Capital(\"Guanajuato\",    21.04682614,    -101.2668254)\n",
        "Tlaxcala=     Capital(\"TlaxcaladeXicohtencatl\",    19.31376721,    -98.24018587)\n",
        "\n",
        "CiudaddeMexico.setVecinos([EstadodeMexico,Morelos])\n",
        "Puebla.setVecinos([Oaxaca,Guerrero,Veracruz,Tlaxcala,Morelos,EstadodeMexico,Hidalgo])\n",
        "Jalisco.setVecinos([Colima,Michoacan,Guanajuato,Aguascalientes,Zacatecas,Nayarit])\n",
        "NuevoLeon.setVecinos([Coahuila,Tamaulipas,SanLuisPotosi])\n",
        "Chihuahua.setVecinos([Sonora,Sinaloa,Durango,Coahuila])\n",
        "Yucatan.setVecinos([Campeche,QuintanaRoo])\n",
        "Coahuila.setVecinos([NuevoLeon,SanLuisPotosi,Durango,Chihuahua,Zacatecas])\n",
        "Aguascalientes.setVecinos([Zacatecas,Jalisco])\n",
        "Sonora.setVecinos([Sinaloa,Chihuahua,BajaCalifornia])\n",
        "BajaCalifornia.setVecinos([BajaCaliforniaSur,Sonora])\n",
        "SanLuisPotosi.setVecinos([Coahuila,NuevoLeon,Tamaulipas,Veracruz,Hidalgo,Queretaro,Guanajuato,Zacatecas])\n",
        "Sinaloa.setVecinos([Sonora,Chihuahua,Durango,Nayarit])\n",
        "Queretaro.setVecinos([Guanajuato,Hidalgo,EstadodeMexico,SanLuisPotosi,Michoacan])\n",
        "Michoacan.setVecinos([Colima,Jalisco,Guanajuato,Queretaro,EstadodeMexico,Guerrero])\n",
        "Durango.setVecinos([Sinaloa,Chihuahua,Coahuila,Zacatecas,Nayarit]) \n",
        "Chiapas.setVecinos([Oaxaca,Veracruz,Tabasco])\n",
        "Veracruz.setVecinos([Tabasco,Chiapas,Oaxaca,Puebla,Hidalgo,SanLuisPotosi,Tamaulipas])\n",
        "Nayarit.setVecinos([Sinaloa,Durango,Zacatecas,Jalisco])\n",
        "Tlaxcala.setVecinos([Hidalgo,Puebla])\n",
        "Morelos.setVecinos([CiudaddeMexico,EstadodeMexico,Puebla,Guerrero])\n",
        "Tabasco.setVecinos([Campeche,Chiapas,Veracruz])\n",
        "Tamaulipas.setVecinos([NuevoLeon,SanLuisPotosi,Veracruz])\n",
        "Hidalgo.setVecinos([Queretaro,SanLuisPotosi,Veracruz,Puebla,Tlaxcala,EstadodeMexico])\n",
        "Oaxaca.setVecinos([Guerrero,Puebla,Veracruz,Chiapas])\n",
        "BajaCaliforniaSur.setVecinos([BajaCalifornia])\n",
        "Campeche.setVecinos([Yucatan, QuintanaRoo, Tabasco])\n",
        "Guerrero.setVecinos([Oaxaca,Puebla,Morelos,EstadodeMexico,Michoacan])\n",
        "EstadodeMexico.setVecinos([Guerrero,Michoacan,Queretaro,Hidalgo,Puebla,Morelos,CiudaddeMexico])\n",
        "QuintanaRoo.setVecinos([Yucatan, Campeche])\n",
        "Colima.setVecinos([Jalisco,Michoacan])\n",
        "Zacatecas.setVecinos([Aguascalientes,Jalisco,Durango,Coahuila,SanLuisPotosi,Nayarit])\n",
        "Guanajuato.setVecinos([SanLuisPotosi,Jalisco,Michoacan,Queretaro])\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "<H1>Metodos A_Star</H1>\n",
        "\n",
        "**A_Star** -> se realiza la busqueda por medio del algoritmo a estrella, los parametros adicionales son para extraer informacion solamente\n",
        "\n",
        "**Expand** -> Obtenemos los vecinos de las capitales\n",
        "\n",
        "**Evalua** -> Aplicamos la regla f(x) = g(x) + h(x)\n",
        "\n",
        "**GoalTest** -> Regresa true si ya se llego al estado final."
      ],
      "metadata": {
        "id": "-03ydbVu3KhC"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "12EYYl0gZnbN"
      },
      "outputs": [],
      "source": [
        "def A_Star(F,E_f,listD,listOptimos):\n",
        "    if(len(F) == 0):\n",
        "            return \"None\"\n",
        "    E_a = copy.deepcopy(F.pop(0)) \n",
        "    C_A = E_a[0].distanciaActual\n",
        "    listOptimos.append(E_a[0])\n",
        "    if(Goaltest(E_a[0],E_f)):   \n",
        "        aggDetalle(E_a[1])\n",
        "        return\n",
        "    else:        \n",
        "        OS = Expand(E_a[0])\n",
        "        OS = Evalua(OS,C_A,E_f) \n",
        "        F = F+OS \n",
        "        F.sort(key = lambda x: x[0].fx, reverse = False)\n",
        "        A_Star(F,E_f,listD,listOptimos)\n",
        "    \n",
        "def Expand(Estado):\n",
        "  return Estado.listaVecinos\n",
        "def Evalua(OS,C_A,E_f):\n",
        "  for i in range(len(OS)):\n",
        "    #OS[i][0].hx = EstablecerHeuristicas(OS[i][0], E_f)\n",
        "    OS[i][0].hx = getDistanciaHX(OS[i][0], E_f)\n",
        "    OS[i][1] = OS[i][1]+OS[i][0].distanciaActual\n",
        "    OS[i][0].fx = OS[i][1]+OS[i][0].hx\n",
        "    OS[i][0].distanciaActual = OS[i][1]\n",
        "  return copy.deepcopy(OS)\n",
        "\n",
        "def Goaltest(Estado,E_f):\n",
        "  return Estado.nombre == E_f.nombre\n",
        "\n",
        "  "
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "<h1>Metodos para la creacion del Mapa</h1>\n",
        "\n",
        "**IndiceMenor** -> Sirve para agarrar la capital mas cercana despues de que un usuario establece un marcador en el mapa.\n",
        "\n",
        "**new_feature_callback** -> Para limitar al usuario que solo pueda poner un marcador a la ves y extraer las coordenadas de ese.\n",
        "\n",
        "**realizarBusqueda** -> Se ejecutara cuando se precione el boton A_star en el mapa. Este metodo realiza la busqueda con todas las combinaciones de los 4 estados posibles (y el estado inicial al principio y al final ), detectara la combinacion mas optima.\n",
        "\n",
        "**crearMapa** -> Desplegamos el mapa, mostrando todas las capitales, el usuario puede poner un marcador indicando el punto de partida. Tambien tiene un boton para realizar la busqueda.\n",
        "\n"
      ],
      "metadata": {
        "id": "vRHIVJBe37zN"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "drawing = gmaps.drawing_layer()\n",
        "global location_list\n",
        "location_list = []\n",
        "def IndiceMenor(punto):\n",
        "  distanciaMenor = distancia(punto[0],punto[1],ListaCapitales[0].getCoordenadas()[0],ListaCapitales[0].getCoordenadas()[1])*111.1\n",
        "  x1 = 0\n",
        "  for x in range(len(ListaCapitales)):\n",
        "    distanciaAComparar = distancia(punto[0],punto[1],ListaCapitales[x].getCoordenadas()[0],ListaCapitales[x].getCoordenadas()[1])\n",
        "    if(distanciaMenor > distanciaAComparar ):\n",
        "      x1 = x\n",
        "      distanciaMenor = distanciaAComparar\n",
        "  return x1\n",
        "\n",
        "def new_feature_callback(feature):\n",
        "  global location_list\n",
        "  global drawing\n",
        "  global puntos\n",
        "  try:\n",
        "    location = feature.location\n",
        "  except AttributeError:\n",
        "    return\n",
        "  location_list.append(feature)\n",
        "  if len(location_list) > 1:\n",
        "    location_list.pop(0)\n",
        "  if len(drawing.features) > 1:\n",
        "    drawing.features = location_list\n",
        "  if len(location_list) == 1:\n",
        "    p1 = location_list[0].location\n",
        "    #Almacenar las coordenadas de los puntos\n",
        "    puntos = p1 \n",
        "global out\n",
        "def realizarBusqueda(event): \n",
        "  listAux = getCopia()\n",
        "  EstadoInicial = listAux[IndiceMenor(puntos)]\n",
        "  random.shuffle(listAux)\n",
        "  y = listAux[0:4]\n",
        "  aggDetalle(\"Estados Objetivo: \")\n",
        "  aggDetalle(EstadoInicial.nombre)\n",
        "  for nom in y:\n",
        "    aggDetalle(nom.nombre)\n",
        "  aggDetalle(EstadoInicial.nombre)\n",
        "  aggDetalle(\"------------------------------\")\n",
        "  #Regresa una lista de combinaciones\n",
        "  combinations = permutList(y)\n",
        "  listDistancias = []\n",
        "  listOptimos = []\n",
        "  listD = []\n",
        "  listaLineas = []\n",
        "  CaminoOptimo = []\n",
        "  for x in range(len(combinations)):\n",
        "  #El problema:\n",
        "    aggDetalle(\"**************COMBINACION \"+str(x))\n",
        "\n",
        "    listCaminosComb =[]\n",
        "    for j in range(5):\n",
        "      if(j == 0):\n",
        "        E_i = [EstadoInicial,0]\n",
        "        E_f = combinations[x][j]\n",
        "      elif(j == 4):\n",
        "        E_i = [combinations[x][j-1],0]\n",
        "        E_f = EstadoInicial\n",
        "      else:\n",
        "        E_i = [combinations[x][j-1],0] \n",
        "        E_f = combinations[x][j]\n",
        "      F = [E_i]\n",
        "      aggDetalle(E_i[0].nombre+\" -> \"+E_f.nombre)\n",
        "      listD.append(getDistanciaHX(E_i[0], E_f))\n",
        "      A_Star(F,E_f,listD,listOptimos)\n",
        "      progress(x,len(combinations))\n",
        "      out.update(progress(x+1, len(combinations)))\n",
        "    v=0\n",
        "    aggDetalle(listD)\n",
        "    for j in listD:\n",
        "      v = v+j\n",
        "    if listDistancias == [] or v < listDistancias[1]:\n",
        "      listDistancias = [listOptimos, v]\n",
        "      CaminoOptimo = [EstadoInicial] + combinations[x]+[EstadoInicial]\n",
        "    listD = []\n",
        "    listOptimos = []\n",
        "    \n",
        "  aggDetalle(\"************************************\")\n",
        "  aggDetalle(\"Combinacion mas Optima: \")\n",
        "  for x in CaminoOptimo:\n",
        "    aggDetalle(x.nombre)\n",
        "  aggDetalle(\"DistanciaTotal: \"+ str(listDistancias[1]));\n",
        "  aggDetalle(\"************************************\")\n",
        "  for x in range(len(listDistancias[0])-1):\n",
        "    aggDetalle(listDistancias[0][x].nombre)\n",
        "    listaLineas.append(gmaps.Line((listDistancias[0][x].getCoordenadas()),(listDistancias[0][x+1].getCoordenadas()) , stroke_weight=8.0))\n",
        "  drawing.features = listaLineas\n",
        "  out.update(progress(0, len(combinations)))\n",
        "\n",
        "def crearMapa():\n",
        "  global out\n",
        "  listaPuntos = []\n",
        "  figure = gmaps.figure(center=(23.49, -102.58), zoom_level=5)\n",
        "  for x in ListaCapitales:\n",
        "    listaPuntos.append(x.getCoordenadas())\n",
        "  drawing.on_new_feature(new_feature_callback)\n",
        "  figure.add_layer(drawing)\n",
        "  symbols = gmaps.symbol_layer(listaPuntos,fill_color=\"blue\",stroke_color=\"black\")\n",
        "  figure.add_layer(symbols)\n",
        "  btnAstar = widgets.Button(description='Astar Aleatorio', button_style='')\n",
        "  btnAstar.on_click(realizarBusqueda)\n",
        "  #Se genera un contenedor para manejar el mapa y las funcionalidades del botón\n",
        "  container = widgets.VBox([figure, btnAstar])\n",
        "  display(container)\n",
        "  out = display(progress(0, 100), display_id=True)"
      ],
      "metadata": {
        "id": "ZuapjVU0-mLg"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "<h1>Desplegamos el mapa</h1>"
      ],
      "metadata": {
        "id": "mOvb5JnW5GCI"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "crearMapa()"
      ],
      "metadata": {
        "id": "fzaUsnsvuo84",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 739,
          "referenced_widgets": [
            "625fb191dc0240e69e2227308f8a4d3d",
            "3f391d0b1f5f470aaeb06b58386bc5bd",
            "77bda03d87124d00a630a30acf66abd0",
            "fc23ada6cd574a509e20be34327a61ad",
            "ac99a0db28f143c08d0f437d23564793",
            "089f81e38a63409f96f55b50444740be",
            "9c67670d77cd4334b35be531f305a221",
            "b0e2fc362d57459ca66063ce603ac332",
            "f5c3b2b6fe2d47c8b65b9040f7103f3a",
            "757c32d09c074c7fafb387b8decd0a01",
            "a3679742429d4365a8693b65165be2df",
            "3d5062ce495840f4b224cf3fab766bae",
            "5c30043db049432393dacac9fbf0d90a",
            "0ceeb4d9fee64eb39cc85ac20119bfe0",
            "cf0bc9763e284195bc582955892932a4",
            "c88bd437c6ae419d855833905475803c",
            "27ddf118fdc24930b3afa43a002b5d30",
            "7fa66333eaaf4c10bbb3ea102796f19a",
            "2fb4bd4bf5ca46b8a763e75a972067dd",
            "804a576eb508442fa9b01cdd2408c1aa",
            "38c995cad5a044a7ad866e11e7d7d475",
            "e5819d7ac4534ef19494642e2d03e0c8",
            "a7b584926cc74951832826a3772f96d8",
            "3c1829280dfc400fa785c60383bdf44c",
            "63a1950eedf0498dbccb21d29e1a5bde",
            "cd0d2f5609a841d0bafc5a27c4716e03",
            "7f117c50bc0c439da9b995af43adcc12",
            "257ce35e7bee4034b2bafdbf257f9f61",
            "26773d1b196d460abc6c84ed5364f8eb",
            "e262f2e1d9974012939474e885e10803",
            "e352d858ebb14a4295f8db4081a13402",
            "d987daf2f2b44af699639fcf5347ab01",
            "0e866c3ca0dd48de93a0ce23bb49cd87",
            "d9f13aacbc9946e8b84077b1bb2d627b",
            "3558d2dd90244a17a32c5e5dca370339",
            "88b684860b8742b7999dac2860a3ab03",
            "bb37e4af738d40759fe818f89c955e10",
            "c6ee06a1c9924be094c61319b08a8b01",
            "5ddf5e512b8b493790ee747d848cd013",
            "18117222496246b68a049652a34c01c4",
            "9352d30dafbf421195d41cfe37b6dbc5",
            "19a6d12edebc49c497bb7ffa1acae009",
            "d9371faeb69943e2965eeb7c3771b270",
            "28f29ffb9db444c289a19116045e99fa",
            "1d30a87873314843b1cae8b95c53451c",
            "9925f314eca74a15b0dd264c4faad4c7",
            "5f1e3af36f6d47feb43a91051172d7f1",
            "484c0f9385df476781a814955c8a5a8b",
            "c87909ccc726420da17a35f36c3ccda3",
            "11f59f2754ce4054acbc5467e19ba8bf",
            "68d4b8aac9cb4066894ca9604c490c62",
            "011c44de0cf740379d268bfacee79721",
            "0650710faa7147f9b9ffadaadedbd909",
            "d610437ddde2470e84c2dbf25bd6fa82",
            "914bae645928488181519fbe5269cd10",
            "4b0af41d76844407874ee3aa32a1303d",
            "e0574bed7e97487ba233182c6b88dc89",
            "b1a61125649a4b5c9a75c1c160e2ad4e",
            "8aacb539d0e74ed1814b501f62b53642",
            "f3f711deaaab4884b488493951baad83",
            "05615cfd8ead4864a70e6b89e11f6e11",
            "02b45b9211474ce0a3c6b4ea9ceec8a2",
            "021f21053716412996380f077c828514",
            "d5643f621e424d07ba3fd9f8d5ca7476",
            "41cec75dbe714ffcbf9d8329aadb8a03",
            "16c648078898466387d6734ef551d8e6",
            "b118b7c6c36b4d068ef04221a6c3a452",
            "8674143252654167b0c238f8916e720b",
            "459195a1cdcc47d1a836cdd2e8366d66",
            "24afa06c865f43fdb18e6c90fe43c229",
            "ca06fdcd51f1459d88a9bba1129fa848",
            "3946afa11c6f47a3ab2b9dc85e293dc5",
            "b750333699e24e2f86549d6fde2ba1fe",
            "bd4fa9ec76234711a13c70dffcfab994",
            "68460b10419c4e35a2d55a4fd3097235",
            "62ed1302d4e94c4cb9e395f68ba188b6",
            "f94237d69d2d48b2a170bfd9c26b6f42",
            "13f68f14fd634654bfc686f7d8e4ee65",
            "3b9d8092917a48a59e45fd14212f0c0f",
            "3aead8907a8742d79ccdb9e928815d41"
          ]
        },
        "outputId": "09eae706-ae1d-45f1-8630-3c2a36073dc7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Figure(layout=FigureLayout(height='420px')), Button(description='Astar Aleatorio', style=Button…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "625fb191dc0240e69e2227308f8a4d3d"
            }
          },
          "metadata": {
            "application/vnd.jupyter.widget-view+json": {
              "colab": {
                "custom_widget_manager": {
                  "url": "https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/d2e234f7cc04bf79/manager.min.js"
                }
              }
            }
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "        <progress\n",
              "            value='0'\n",
              "            max='24',\n",
              "            style='width: 100%'\n",
              "        >\n",
              "            0\n",
              "        </progress>\n",
              "    "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-13-bcd42e35a85e>\u001b[0m in \u001b[0;36mrealizarBusqueda\u001b[0;34m(event)\u001b[0m\n\u001b[1;32m     32\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mrealizarBusqueda\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mevent\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     33\u001b[0m   \u001b[0mlistAux\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetCopia\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 34\u001b[0;31m   \u001b[0mEstadoInicial\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlistAux\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mIndiceMenor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpuntos\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     35\u001b[0m   \u001b[0mrandom\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshuffle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlistAux\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     36\u001b[0m   \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlistAux\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'puntos' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Si se requiere mostrar mas informacion sobre la ultima busqueda, se ejecuta esta ultima celda."
      ],
      "metadata": {
        "id": "NXNg7IHp5LVR"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "mostrarDetalle()"
      ],
      "metadata": {
        "id": "lhJlEeb5fXMu",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ba2abc01-c3b1-4b76-fed0-22c329da515a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Estados Objetivo: \n",
            "CuliacanRosales\n",
            "SanFranciscodeCampeche\n",
            "LaPaz\n",
            "OaxacadeJuarez\n",
            "Zacatecas\n",
            "CuliacanRosales\n",
            "------------------------------\n",
            "**************COMBINACION 0\n",
            "CuliacanRosales -> SanFranciscodeCampeche\n",
            "383.602\n",
            "SanFranciscodeCampeche -> LaPaz\n",
            "1356.041\n",
            "LaPaz -> OaxacadeJuarez\n",
            "345.632\n",
            "OaxacadeJuarez -> Zacatecas\n",
            "193.887\n",
            "Zacatecas -> CuliacanRosales\n",
            "464.329\n",
            "[2352.678, 5086.0, 4597.0, 1071.768, 750.038]\n",
            "**************COMBINACION 1\n",
            "CuliacanRosales -> SanFranciscodeCampeche\n",
            "383.602\n",
            "SanFranciscodeCampeche -> LaPaz\n",
            "1356.041\n",
            "LaPaz -> Zacatecas\n",
            "291.216\n",
            "Zacatecas -> OaxacadeJuarez\n",
            "345.632\n",
            "OaxacadeJuarez -> CuliacanRosales\n",
            "481.222\n",
            "[2352.678, 5086.0, 3371.0, 1072.328, 1676.582]\n",
            "**************COMBINACION 2\n",
            "CuliacanRosales -> SanFranciscodeCampeche\n",
            "383.602\n",
            "SanFranciscodeCampeche -> OaxacadeJuarez\n",
            "567.924\n",
            "OaxacadeJuarez -> LaPaz\n",
            "1356.041\n",
            "LaPaz -> Zacatecas\n",
            "291.216\n",
            "Zacatecas -> CuliacanRosales\n",
            "464.329\n",
            "[2352.678, 1190.71, 4597.0, 3371.0, 750.038]\n",
            "**************COMBINACION 3\n",
            "CuliacanRosales -> SanFranciscodeCampeche\n",
            "383.602\n",
            "SanFranciscodeCampeche -> OaxacadeJuarez\n",
            "567.924\n",
            "OaxacadeJuarez -> Zacatecas\n",
            "193.887\n",
            "Zacatecas -> LaPaz\n",
            "1356.041\n",
            "LaPaz -> CuliacanRosales\n",
            "726.887\n",
            "[2352.678, 1190.71, 1071.768, 3371.0, 2718.0]\n",
            "**************COMBINACION 4\n",
            "CuliacanRosales -> SanFranciscodeCampeche\n",
            "383.602\n",
            "SanFranciscodeCampeche -> Zacatecas\n",
            "193.887\n",
            "Zacatecas -> LaPaz\n",
            "1356.041\n",
            "LaPaz -> OaxacadeJuarez\n",
            "345.632\n",
            "OaxacadeJuarez -> CuliacanRosales\n",
            "481.222\n",
            "[2352.678, 1752.192, 3371.0, 4597.0, 1676.582]\n",
            "**************COMBINACION 5\n",
            "CuliacanRosales -> SanFranciscodeCampeche\n",
            "383.602\n",
            "SanFranciscodeCampeche -> Zacatecas\n",
            "193.887\n",
            "Zacatecas -> OaxacadeJuarez\n",
            "345.632\n",
            "OaxacadeJuarez -> LaPaz\n",
            "1356.041\n",
            "LaPaz -> CuliacanRosales\n",
            "726.887\n",
            "[2352.678, 1752.192, 1072.328, 4597.0, 2718.0]\n",
            "**************COMBINACION 6\n",
            "CuliacanRosales -> LaPaz\n",
            "1356.041\n",
            "LaPaz -> SanFranciscodeCampeche\n",
            "383.602\n",
            "SanFranciscodeCampeche -> OaxacadeJuarez\n",
            "567.924\n",
            "OaxacadeJuarez -> Zacatecas\n",
            "193.887\n",
            "Zacatecas -> CuliacanRosales\n",
            "464.329\n",
            "[2718.0, 5086.0, 1190.71, 1071.768, 750.038]\n",
            "**************COMBINACION 7\n",
            "CuliacanRosales -> LaPaz\n",
            "1356.041\n",
            "LaPaz -> SanFranciscodeCampeche\n",
            "383.602\n",
            "SanFranciscodeCampeche -> Zacatecas\n",
            "193.887\n",
            "Zacatecas -> OaxacadeJuarez\n",
            "345.632\n",
            "OaxacadeJuarez -> CuliacanRosales\n",
            "481.222\n",
            "[2718.0, 5086.0, 1752.192, 1072.328, 1676.582]\n",
            "**************COMBINACION 8\n",
            "CuliacanRosales -> LaPaz\n",
            "1356.041\n",
            "LaPaz -> OaxacadeJuarez\n",
            "345.632\n",
            "OaxacadeJuarez -> SanFranciscodeCampeche\n",
            "383.602\n",
            "SanFranciscodeCampeche -> Zacatecas\n",
            "193.887\n",
            "Zacatecas -> CuliacanRosales\n",
            "464.329\n",
            "[2718.0, 4597.0, 1181.428, 1752.192, 750.038]\n",
            "**************COMBINACION 9\n",
            "CuliacanRosales -> LaPaz\n",
            "1356.041\n",
            "LaPaz -> OaxacadeJuarez\n",
            "345.632\n",
            "OaxacadeJuarez -> Zacatecas\n",
            "193.887\n",
            "Zacatecas -> SanFranciscodeCampeche\n",
            "383.602\n",
            "SanFranciscodeCampeche -> CuliacanRosales\n",
            "481.222\n",
            "[2718.0, 4597.0, 1071.768, 1744.085, 2357.005]\n",
            "**************COMBINACION 10\n",
            "CuliacanRosales -> LaPaz\n",
            "1356.041\n",
            "LaPaz -> Zacatecas\n",
            "291.216\n",
            "Zacatecas -> SanFranciscodeCampeche\n",
            "383.602\n",
            "SanFranciscodeCampeche -> OaxacadeJuarez\n",
            "567.924\n",
            "OaxacadeJuarez -> CuliacanRosales\n",
            "481.222\n",
            "[2718.0, 3371.0, 1744.085, 1190.71, 1676.582]\n",
            "**************COMBINACION 11\n",
            "CuliacanRosales -> LaPaz\n",
            "1356.041\n",
            "LaPaz -> Zacatecas\n",
            "291.216\n",
            "Zacatecas -> OaxacadeJuarez\n",
            "345.632\n",
            "OaxacadeJuarez -> SanFranciscodeCampeche\n",
            "383.602\n",
            "SanFranciscodeCampeche -> CuliacanRosales\n",
            "481.222\n",
            "[2718.0, 3371.0, 1072.328, 1181.428, 2357.005]\n",
            "**************COMBINACION 12\n",
            "CuliacanRosales -> OaxacadeJuarez\n",
            "345.632\n",
            "OaxacadeJuarez -> SanFranciscodeCampeche\n",
            "383.602\n",
            "SanFranciscodeCampeche -> LaPaz\n",
            "1356.041\n",
            "LaPaz -> Zacatecas\n",
            "291.216\n",
            "Zacatecas -> CuliacanRosales\n",
            "464.329\n",
            "[1680.92, 1181.428, 5086.0, 3371.0, 750.038]\n",
            "**************COMBINACION 13\n",
            "CuliacanRosales -> OaxacadeJuarez\n",
            "345.632\n",
            "OaxacadeJuarez -> SanFranciscodeCampeche\n",
            "383.602\n",
            "SanFranciscodeCampeche -> Zacatecas\n",
            "193.887\n",
            "Zacatecas -> LaPaz\n",
            "1356.041\n",
            "LaPaz -> CuliacanRosales\n",
            "726.887\n",
            "[1680.92, 1181.428, 1752.192, 3371.0, 2718.0]\n",
            "**************COMBINACION 14\n",
            "CuliacanRosales -> OaxacadeJuarez\n",
            "345.632\n",
            "OaxacadeJuarez -> LaPaz\n",
            "1356.041\n",
            "LaPaz -> SanFranciscodeCampeche\n",
            "383.602\n",
            "SanFranciscodeCampeche -> Zacatecas\n",
            "193.887\n",
            "Zacatecas -> CuliacanRosales\n",
            "464.329\n",
            "[1680.92, 4597.0, 5086.0, 1752.192, 750.038]\n",
            "**************COMBINACION 15\n",
            "CuliacanRosales -> OaxacadeJuarez\n",
            "345.632\n",
            "OaxacadeJuarez -> LaPaz\n",
            "1356.041\n",
            "LaPaz -> Zacatecas\n",
            "291.216\n",
            "Zacatecas -> SanFranciscodeCampeche\n",
            "383.602\n",
            "SanFranciscodeCampeche -> CuliacanRosales\n",
            "481.222\n",
            "[1680.92, 4597.0, 3371.0, 1744.085, 2357.005]\n",
            "**************COMBINACION 16\n",
            "CuliacanRosales -> OaxacadeJuarez\n",
            "345.632\n",
            "OaxacadeJuarez -> Zacatecas\n",
            "193.887\n",
            "Zacatecas -> SanFranciscodeCampeche\n",
            "383.602\n",
            "SanFranciscodeCampeche -> LaPaz\n",
            "1356.041\n",
            "LaPaz -> CuliacanRosales\n",
            "726.887\n",
            "[1680.92, 1071.768, 1744.085, 5086.0, 2718.0]\n",
            "**************COMBINACION 17\n",
            "CuliacanRosales -> OaxacadeJuarez\n",
            "345.632\n",
            "OaxacadeJuarez -> Zacatecas\n",
            "193.887\n",
            "Zacatecas -> LaPaz\n",
            "1356.041\n",
            "LaPaz -> SanFranciscodeCampeche\n",
            "383.602\n",
            "SanFranciscodeCampeche -> CuliacanRosales\n",
            "481.222\n",
            "[1680.92, 1071.768, 3371.0, 5086.0, 2357.005]\n",
            "**************COMBINACION 18\n",
            "CuliacanRosales -> Zacatecas\n",
            "291.216\n",
            "Zacatecas -> SanFranciscodeCampeche\n",
            "383.602\n",
            "SanFranciscodeCampeche -> LaPaz\n",
            "1356.041\n",
            "LaPaz -> OaxacadeJuarez\n",
            "345.632\n",
            "OaxacadeJuarez -> CuliacanRosales\n",
            "481.222\n",
            "[750.999, 1744.085, 5086.0, 4597.0, 1676.582]\n",
            "**************COMBINACION 19\n",
            "CuliacanRosales -> Zacatecas\n",
            "291.216\n",
            "Zacatecas -> SanFranciscodeCampeche\n",
            "383.602\n",
            "SanFranciscodeCampeche -> OaxacadeJuarez\n",
            "567.924\n",
            "OaxacadeJuarez -> LaPaz\n",
            "1356.041\n",
            "LaPaz -> CuliacanRosales\n",
            "726.887\n",
            "[750.999, 1744.085, 1190.71, 4597.0, 2718.0]\n",
            "**************COMBINACION 20\n",
            "CuliacanRosales -> Zacatecas\n",
            "291.216\n",
            "Zacatecas -> LaPaz\n",
            "1356.041\n",
            "LaPaz -> SanFranciscodeCampeche\n",
            "383.602\n",
            "SanFranciscodeCampeche -> OaxacadeJuarez\n",
            "567.924\n",
            "OaxacadeJuarez -> CuliacanRosales\n",
            "481.222\n",
            "[750.999, 3371.0, 5086.0, 1190.71, 1676.582]\n",
            "**************COMBINACION 21\n",
            "CuliacanRosales -> Zacatecas\n",
            "291.216\n",
            "Zacatecas -> LaPaz\n",
            "1356.041\n",
            "LaPaz -> OaxacadeJuarez\n",
            "345.632\n",
            "OaxacadeJuarez -> SanFranciscodeCampeche\n",
            "383.602\n",
            "SanFranciscodeCampeche -> CuliacanRosales\n",
            "481.222\n",
            "[750.999, 3371.0, 4597.0, 1181.428, 2357.005]\n",
            "**************COMBINACION 22\n",
            "CuliacanRosales -> Zacatecas\n",
            "291.216\n",
            "Zacatecas -> OaxacadeJuarez\n",
            "345.632\n",
            "OaxacadeJuarez -> SanFranciscodeCampeche\n",
            "383.602\n",
            "SanFranciscodeCampeche -> LaPaz\n",
            "1356.041\n",
            "LaPaz -> CuliacanRosales\n",
            "726.887\n",
            "[750.999, 1072.328, 1181.428, 5086.0, 2718.0]\n",
            "**************COMBINACION 23\n",
            "CuliacanRosales -> Zacatecas\n",
            "291.216\n",
            "Zacatecas -> OaxacadeJuarez\n",
            "345.632\n",
            "OaxacadeJuarez -> LaPaz\n",
            "1356.041\n",
            "LaPaz -> SanFranciscodeCampeche\n",
            "383.602\n",
            "SanFranciscodeCampeche -> CuliacanRosales\n",
            "481.222\n",
            "[750.999, 1072.328, 4597.0, 5086.0, 2357.005]\n",
            "************************************\n",
            "Combinacion mas Optima: \n",
            "CuliacanRosales\n",
            "LaPaz\n",
            "Zacatecas\n",
            "OaxacadeJuarez\n",
            "SanFranciscodeCampeche\n",
            "CuliacanRosales\n",
            "DistanciaTotal: 10699.760999999999\n",
            "************************************\n",
            "CuliacanRosales\n",
            "Hermosillo\n",
            "Mexicali\n",
            "LaPaz\n",
            "LaPaz\n",
            "Mexicali\n",
            "Hermosillo\n",
            "CuliacanRosales\n",
            "VictoriadeDurango\n",
            "Zacatecas\n",
            "Zacatecas\n",
            "SanLuisPotosi\n",
            "SantiagodeQueretaro\n",
            "TolucadeLerdo\n",
            "PuebladeZaragoza\n",
            "OaxacadeJuarez\n",
            "OaxacadeJuarez\n",
            "TuxtlaGutierrez\n",
            "Villahermosa\n",
            "SanFranciscodeCampeche\n",
            "SanFranciscodeCampeche\n",
            "Villahermosa\n",
            "XalapaEnriquez\n",
            "PachucadeSoto\n",
            "SantiagodeQueretaro\n",
            "Guanajuato\n",
            "Guadalajara\n",
            "Tepic\n",
            "\n"
          ]
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    },
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "625fb191dc0240e69e2227308f8a4d3d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "VBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "VBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_3f391d0b1f5f470aaeb06b58386bc5bd",
              "IPY_MODEL_77bda03d87124d00a630a30acf66abd0"
            ],
            "layout": "IPY_MODEL_fc23ada6cd574a509e20be34327a61ad"
          }
        },
        "3f391d0b1f5f470aaeb06b58386bc5bd": {
          "model_module": "jupyter-gmaps",
          "model_name": "FigureModel",
          "model_module_version": "0.9.0",
          "state": {
            "_dom_classes": [],
            "_errors_box": "IPY_MODEL_9c67670d77cd4334b35be531f305a221",
            "_map": "IPY_MODEL_b0e2fc362d57459ca66063ce603ac332",
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "FigureModel",
            "_toolbar": "IPY_MODEL_f5c3b2b6fe2d47c8b65b9040f7103f3a",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "FigureView",
            "layout": "IPY_MODEL_757c32d09c074c7fafb387b8decd0a01"
          }
        },
        "77bda03d87124d00a630a30acf66abd0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ButtonView",
            "button_style": "",
            "description": "Astar Aleatorio",
            "disabled": false,
            "icon": "",
            "layout": "IPY_MODEL_ac99a0db28f143c08d0f437d23564793",
            "style": "IPY_MODEL_089f81e38a63409f96f55b50444740be",
            "tooltip": ""
          }
        },
        "fc23ada6cd574a509e20be34327a61ad": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "ac99a0db28f143c08d0f437d23564793": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "089f81e38a63409f96f55b50444740be": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "button_color": null,
            "font_weight": ""
          }
        },
        "9c67670d77cd4334b35be531f305a221": {
          "model_module": "jupyter-gmaps",
          "model_name": "ErrorsBoxModel",
          "model_module_version": "0.9.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "ErrorsBoxModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "ErrorsBoxView",
            "errors": [],
            "layout": "IPY_MODEL_a3679742429d4365a8693b65165be2df"
          }
        },
        "b0e2fc362d57459ca66063ce603ac332": {
          "model_module": "jupyter-gmaps",
          "model_name": "PlainmapModel",
          "model_module_version": "0.9.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "PlainmapModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "PlainmapView",
            "configuration": {
              "api_key": "AIzaSyBIp3sn5fU11k3gnjEk4mQKoxC-e_w4GLY"
            },
            "data_bounds": [
              [
                14.367429927253017,
                -112.23054261384812
              ],
              [
                28.91605110587199,
                -88.80175220964145
              ]
            ],
            "initial_viewport": {
              "type": "ZOOM_CENTER",
              "center": [
                23.49,
                -102.58
              ],
              "zoom_level": 5
            },
            "layers": [
              "IPY_MODEL_3d5062ce495840f4b224cf3fab766bae",
              "IPY_MODEL_5c30043db049432393dacac9fbf0d90a"
            ],
            "layout": "IPY_MODEL_0ceeb4d9fee64eb39cc85ac20119bfe0",
            "map_type": "ROADMAP",
            "mouse_handling": "COOPERATIVE",
            "tilt": 45
          }
        },
        "f5c3b2b6fe2d47c8b65b9040f7103f3a": {
          "model_module": "jupyter-gmaps",
          "model_name": "ToolbarModel",
          "model_module_version": "0.9.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "ToolbarModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "ToolbarView",
            "layer_controls": [
              "IPY_MODEL_cf0bc9763e284195bc582955892932a4"
            ],
            "layout": "IPY_MODEL_c88bd437c6ae419d855833905475803c"
          }
        },
        "757c32d09c074c7fafb387b8decd0a01": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": "420px",
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "a3679742429d4365a8693b65165be2df": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "3d5062ce495840f4b224cf3fab766bae": {
          "model_module": "jupyter-gmaps",
          "model_name": "DrawingLayerModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "DrawingLayerModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "DrawingLayerView",
            "features": [
              "IPY_MODEL_0650710faa7147f9b9ffadaadedbd909",
              "IPY_MODEL_d610437ddde2470e84c2dbf25bd6fa82",
              "IPY_MODEL_914bae645928488181519fbe5269cd10",
              "IPY_MODEL_4b0af41d76844407874ee3aa32a1303d",
              "IPY_MODEL_e0574bed7e97487ba233182c6b88dc89",
              "IPY_MODEL_b1a61125649a4b5c9a75c1c160e2ad4e",
              "IPY_MODEL_8aacb539d0e74ed1814b501f62b53642",
              "IPY_MODEL_f3f711deaaab4884b488493951baad83",
              "IPY_MODEL_05615cfd8ead4864a70e6b89e11f6e11",
              "IPY_MODEL_02b45b9211474ce0a3c6b4ea9ceec8a2",
              "IPY_MODEL_021f21053716412996380f077c828514",
              "IPY_MODEL_d5643f621e424d07ba3fd9f8d5ca7476",
              "IPY_MODEL_41cec75dbe714ffcbf9d8329aadb8a03",
              "IPY_MODEL_16c648078898466387d6734ef551d8e6",
              "IPY_MODEL_b118b7c6c36b4d068ef04221a6c3a452",
              "IPY_MODEL_8674143252654167b0c238f8916e720b",
              "IPY_MODEL_459195a1cdcc47d1a836cdd2e8366d66",
              "IPY_MODEL_24afa06c865f43fdb18e6c90fe43c229",
              "IPY_MODEL_ca06fdcd51f1459d88a9bba1129fa848",
              "IPY_MODEL_3946afa11c6f47a3ab2b9dc85e293dc5",
              "IPY_MODEL_b750333699e24e2f86549d6fde2ba1fe",
              "IPY_MODEL_bd4fa9ec76234711a13c70dffcfab994",
              "IPY_MODEL_68460b10419c4e35a2d55a4fd3097235",
              "IPY_MODEL_62ed1302d4e94c4cb9e395f68ba188b6",
              "IPY_MODEL_f94237d69d2d48b2a170bfd9c26b6f42",
              "IPY_MODEL_13f68f14fd634654bfc686f7d8e4ee65",
              "IPY_MODEL_3b9d8092917a48a59e45fd14212f0c0f",
              "IPY_MODEL_3aead8907a8742d79ccdb9e928815d41"
            ],
            "mode": "MARKER",
            "toolbar_controls": "IPY_MODEL_cf0bc9763e284195bc582955892932a4"
          }
        },
        "5c30043db049432393dacac9fbf0d90a": {
          "model_module": "jupyter-gmaps",
          "model_name": "MarkerLayerModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "MarkerLayerModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "MarkerLayerView",
            "data_bounds": [
              [
                14.367429927253017,
                -112.23054261384812
              ],
              [
                28.91605110587199,
                -88.80175220964145
              ]
            ],
            "markers": [
              "IPY_MODEL_27ddf118fdc24930b3afa43a002b5d30",
              "IPY_MODEL_7fa66333eaaf4c10bbb3ea102796f19a",
              "IPY_MODEL_2fb4bd4bf5ca46b8a763e75a972067dd",
              "IPY_MODEL_804a576eb508442fa9b01cdd2408c1aa",
              "IPY_MODEL_38c995cad5a044a7ad866e11e7d7d475",
              "IPY_MODEL_e5819d7ac4534ef19494642e2d03e0c8",
              "IPY_MODEL_a7b584926cc74951832826a3772f96d8",
              "IPY_MODEL_3c1829280dfc400fa785c60383bdf44c",
              "IPY_MODEL_63a1950eedf0498dbccb21d29e1a5bde",
              "IPY_MODEL_cd0d2f5609a841d0bafc5a27c4716e03",
              "IPY_MODEL_7f117c50bc0c439da9b995af43adcc12",
              "IPY_MODEL_257ce35e7bee4034b2bafdbf257f9f61",
              "IPY_MODEL_26773d1b196d460abc6c84ed5364f8eb",
              "IPY_MODEL_e262f2e1d9974012939474e885e10803",
              "IPY_MODEL_e352d858ebb14a4295f8db4081a13402",
              "IPY_MODEL_d987daf2f2b44af699639fcf5347ab01",
              "IPY_MODEL_0e866c3ca0dd48de93a0ce23bb49cd87",
              "IPY_MODEL_d9f13aacbc9946e8b84077b1bb2d627b",
              "IPY_MODEL_3558d2dd90244a17a32c5e5dca370339",
              "IPY_MODEL_88b684860b8742b7999dac2860a3ab03",
              "IPY_MODEL_bb37e4af738d40759fe818f89c955e10",
              "IPY_MODEL_c6ee06a1c9924be094c61319b08a8b01",
              "IPY_MODEL_5ddf5e512b8b493790ee747d848cd013",
              "IPY_MODEL_18117222496246b68a049652a34c01c4",
              "IPY_MODEL_9352d30dafbf421195d41cfe37b6dbc5",
              "IPY_MODEL_19a6d12edebc49c497bb7ffa1acae009",
              "IPY_MODEL_d9371faeb69943e2965eeb7c3771b270",
              "IPY_MODEL_28f29ffb9db444c289a19116045e99fa",
              "IPY_MODEL_1d30a87873314843b1cae8b95c53451c",
              "IPY_MODEL_9925f314eca74a15b0dd264c4faad4c7",
              "IPY_MODEL_5f1e3af36f6d47feb43a91051172d7f1",
              "IPY_MODEL_484c0f9385df476781a814955c8a5a8b"
            ]
          }
        },
        "0ceeb4d9fee64eb39cc85ac20119bfe0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": "100%",
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": "100%"
          }
        },
        "cf0bc9763e284195bc582955892932a4": {
          "model_module": "jupyter-gmaps",
          "model_name": "DrawingControlsModel",
          "model_module_version": "0.9.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "DrawingControlsModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "DrawingControlsView",
            "layout": "IPY_MODEL_c87909ccc726420da17a35f36c3ccda3",
            "show_controls": true
          }
        },
        "c88bd437c6ae419d855833905475803c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "27ddf118fdc24930b3afa43a002b5d30": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              19.54925279,
              -99.12150253
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "7fa66333eaaf4c10bbb3ea102796f19a": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              19.04473715,
              -98.22033633
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "2fb4bd4bf5ca46b8a763e75a972067dd": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              20.6577107,
              -103.3587646
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "804a576eb508442fa9b01cdd2408c1aa": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              25.71438732,
              -100.3108325
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "38c995cad5a044a7ad866e11e7d7d475": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              28.80362809,
              -106.0747295
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "e5819d7ac4534ef19494642e2d03e0c8": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              20.96929423,
              -89.5873695
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "a7b584926cc74951832826a3772f96d8": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              25.43773816,
              -100.9818715
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "3c1829280dfc400fa785c60383bdf44c": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              21.84310239,
              -102.2392538
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "63a1950eedf0498dbccb21d29e1a5bde": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              29.14893727,
              -110.9503612
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "cd0d2f5609a841d0bafc5a27c4716e03": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              32.62587676,
              -115.4509826
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "7f117c50bc0c439da9b995af43adcc12": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              22.15809077,
              -100.9885293
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "257ce35e7bee4034b2bafdbf257f9f61": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              24.80807668,
              -107.3939017
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "26773d1b196d460abc6c84ed5364f8eb": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              20.5888661,
              -100.3899449
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "e262f2e1d9974012939474e885e10803": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              19.70817185,
              -101.1898883
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "e352d858ebb14a4295f8db4081a13402": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              24.05590136,
              -104.5931936
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "d987daf2f2b44af699639fcf5347ab01": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              16.75285996,
              -93.10317418
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "0e866c3ca0dd48de93a0ce23bb49cd87": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              19.59809292,
              -96.89429475
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "d9f13aacbc9946e8b84077b1bb2d627b": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              21.50407153,
              -104.8944208
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "3558d2dd90244a17a32c5e5dca370339": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              18.92440872,
              -99.22184359
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "88b684860b8742b7999dac2860a3ab03": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              17.99218562,
              -92.95175342
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "bb37e4af738d40759fe818f89c955e10": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              23.7362608,
              -99.13647692
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "c6ee06a1c9924be094c61319b08a8b01": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              20.10155948,
              -98.75879654
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "5ddf5e512b8b493790ee747d848cd013": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              17.07360961,
              -96.7258096
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "18117222496246b68a049652a34c01c4": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              24.14190566,
              -110.3147777
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "9352d30dafbf421195d41cfe37b6dbc5": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              19.83249047,
              -90.53246284
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "19a6d12edebc49c497bb7ffa1acae009": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              17.60385551,
              -99.42017463
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "d9371faeb69943e2965eeb7c3771b270": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              19.2843512,
              -99.65283486
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "28f29ffb9db444c289a19116045e99fa": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              18.49988541,
              -88.29480332
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "1d30a87873314843b1cae8b95c53451c": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              19.2451952,
              -103.7243349
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "9925f314eca74a15b0dd264c4faad4c7": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              22.77059947,
              -102.5838043
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "5f1e3af36f6d47feb43a91051172d7f1": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              21.04682614,
              -101.2668254
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "484c0f9385df476781a814955c8a5a8b": {
          "model_module": "jupyter-gmaps",
          "model_name": "SymbolModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "SymbolModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "SymbolView",
            "display_info_box": false,
            "fill_color": "blue",
            "fill_opacity": 1,
            "hover_text": "",
            "info_box_content": "",
            "location": [
              19.31376721,
              -98.24018587
            ],
            "scale": 3,
            "stroke_color": "black",
            "stroke_opacity": 1
          }
        },
        "c87909ccc726420da17a35f36c3ccda3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "11f59f2754ce4054acbc5467e19ba8bf": {
          "model_module": "jupyter-gmaps",
          "model_name": "MarkerModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "MarkerModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "MarkerView",
            "display_info_box": false,
            "hover_text": "",
            "info_box_content": "",
            "label": "",
            "location": [
              25.747011136357063,
              -107.74357558080926
            ]
          }
        },
        "68d4b8aac9cb4066894ca9604c490c62": {
          "model_module": "jupyter-gmaps",
          "model_name": "MarkerModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "MarkerModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "MarkerView",
            "display_info_box": false,
            "hover_text": "",
            "info_box_content": "",
            "label": "",
            "location": [
              23.348862994451505,
              -98.11955214330926
            ]
          }
        },
        "011c44de0cf740379d268bfacee79721": {
          "model_module": "jupyter-gmaps",
          "model_name": "MarkerModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "MarkerModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "MarkerView",
            "display_info_box": false,
            "hover_text": "",
            "info_box_content": "",
            "label": "",
            "location": [
              24.83315602903734,
              -107.52384901830926
            ]
          }
        },
        "0650710faa7147f9b9ffadaadedbd909": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              29.14893727,
              -110.9503612
            ],
            "start": [
              24.80807668,
              -107.3939017
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "d610437ddde2470e84c2dbf25bd6fa82": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              32.62587676,
              -115.4509826
            ],
            "start": [
              29.14893727,
              -110.9503612
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "914bae645928488181519fbe5269cd10": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              24.14190566,
              -110.3147777
            ],
            "start": [
              32.62587676,
              -115.4509826
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "4b0af41d76844407874ee3aa32a1303d": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              24.14190566,
              -110.3147777
            ],
            "start": [
              24.14190566,
              -110.3147777
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "e0574bed7e97487ba233182c6b88dc89": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              32.62587676,
              -115.4509826
            ],
            "start": [
              24.14190566,
              -110.3147777
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "b1a61125649a4b5c9a75c1c160e2ad4e": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              29.14893727,
              -110.9503612
            ],
            "start": [
              32.62587676,
              -115.4509826
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "8aacb539d0e74ed1814b501f62b53642": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              24.80807668,
              -107.3939017
            ],
            "start": [
              29.14893727,
              -110.9503612
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "f3f711deaaab4884b488493951baad83": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              24.05590136,
              -104.5931936
            ],
            "start": [
              24.80807668,
              -107.3939017
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "05615cfd8ead4864a70e6b89e11f6e11": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              22.77059947,
              -102.5838043
            ],
            "start": [
              24.05590136,
              -104.5931936
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "02b45b9211474ce0a3c6b4ea9ceec8a2": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              22.77059947,
              -102.5838043
            ],
            "start": [
              22.77059947,
              -102.5838043
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "021f21053716412996380f077c828514": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              22.15809077,
              -100.9885293
            ],
            "start": [
              22.77059947,
              -102.5838043
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "d5643f621e424d07ba3fd9f8d5ca7476": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              20.5888661,
              -100.3899449
            ],
            "start": [
              22.15809077,
              -100.9885293
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "41cec75dbe714ffcbf9d8329aadb8a03": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              19.2843512,
              -99.65283486
            ],
            "start": [
              20.5888661,
              -100.3899449
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "16c648078898466387d6734ef551d8e6": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              19.04473715,
              -98.22033633
            ],
            "start": [
              19.2843512,
              -99.65283486
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "b118b7c6c36b4d068ef04221a6c3a452": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              17.07360961,
              -96.7258096
            ],
            "start": [
              19.04473715,
              -98.22033633
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "8674143252654167b0c238f8916e720b": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              17.07360961,
              -96.7258096
            ],
            "start": [
              17.07360961,
              -96.7258096
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "459195a1cdcc47d1a836cdd2e8366d66": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              16.75285996,
              -93.10317418
            ],
            "start": [
              17.07360961,
              -96.7258096
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "24afa06c865f43fdb18e6c90fe43c229": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              17.99218562,
              -92.95175342
            ],
            "start": [
              16.75285996,
              -93.10317418
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "ca06fdcd51f1459d88a9bba1129fa848": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              19.83249047,
              -90.53246284
            ],
            "start": [
              17.99218562,
              -92.95175342
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "3946afa11c6f47a3ab2b9dc85e293dc5": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              19.83249047,
              -90.53246284
            ],
            "start": [
              19.83249047,
              -90.53246284
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "b750333699e24e2f86549d6fde2ba1fe": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              17.99218562,
              -92.95175342
            ],
            "start": [
              19.83249047,
              -90.53246284
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "bd4fa9ec76234711a13c70dffcfab994": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              19.59809292,
              -96.89429475
            ],
            "start": [
              17.99218562,
              -92.95175342
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "68460b10419c4e35a2d55a4fd3097235": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              20.10155948,
              -98.75879654
            ],
            "start": [
              19.59809292,
              -96.89429475
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "62ed1302d4e94c4cb9e395f68ba188b6": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              20.5888661,
              -100.3899449
            ],
            "start": [
              20.10155948,
              -98.75879654
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "f94237d69d2d48b2a170bfd9c26b6f42": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              21.04682614,
              -101.2668254
            ],
            "start": [
              20.5888661,
              -100.3899449
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "13f68f14fd634654bfc686f7d8e4ee65": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              20.6577107,
              -103.3587646
            ],
            "start": [
              21.04682614,
              -101.2668254
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "3b9d8092917a48a59e45fd14212f0c0f": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              21.50407153,
              -104.8944208
            ],
            "start": [
              20.6577107,
              -103.3587646
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        },
        "3aead8907a8742d79ccdb9e928815d41": {
          "model_module": "jupyter-gmaps",
          "model_name": "LineModel",
          "model_module_version": "0.9.0",
          "state": {
            "_model_module": "jupyter-gmaps",
            "_model_module_version": "0.9.0",
            "_model_name": "LineModel",
            "_view_count": null,
            "_view_module": "jupyter-gmaps",
            "_view_module_version": "0.9.0",
            "_view_name": "LineView",
            "end": [
              24.80807668,
              -107.3939017
            ],
            "start": [
              21.50407153,
              -104.8944208
            ],
            "stroke_color": "#696969",
            "stroke_opacity": 0.6,
            "stroke_weight": 8
          }
        }
      }
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}